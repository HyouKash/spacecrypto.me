---

- name: Installation des serveurs web
  hosts: web
  remote_user: web
  become: yes

  tasks:

    - name: Installation de packets
      apt: name={{ item }} update_cache=yes state=latest
      with_items:
        - neovim
        - jq
        - python3-pip
        - docker.io
        - docker-compose
        - apt-transport-https
        - prometheus
        - prometheus-node-exporter
        - fail2ban

    - name: Création dossier
      file: path=/home/web/spacecrypto state=directory owner=web
    - name: Install python module
      pip:
        name: 
          - requests
          - influxdb
          - datetime
          - flask
          - discord_webhook
          - influxdb_client

    - name: Clonage du repo
      ansible.builtin.git:
        repo: https://github.com/HyouKash/spacecrypto.me.git
        dest: /home/web/spacecrypto

    - name: Changement de droit
      ansible.builtin.shell:
        cmd: chown -R web:web /home/web/spacecrypto

    - name: Docker command
      ansible.builtin.shell:
        cmd: cd /home/web/spacecrypto/influx-docker/ && docker-compose pull && docker-compose up -d

    - name: docker command 2
      ansible.builtin.shell:
        cmd: cd /home/web/spacecrypto/influx-docker/ && docker-compose stop

    - name: Download BitcoinCore
      ansible.builtin.shell:
        cmd: cd /home/web && sudo -u web mkdir .bitcoin && sudo -u web mv spacecrypto/bitcoin.conf .bitcoin/ && sudo -u web wget https://bitcoincore.org/bin/bitcoin-core-22.0/bitcoin-22.0-x86_64-linux-gnu.tar.gz && sudo -u web tar -xf bitcoin-22.0-x86_64-linux-gnu.tar.gz && chown -R web:web /home/web

    - name: Création du Service BitcoinCore
      ansible.builtin.shell:
        cmd: echo "[Unit]\nDescription=Start BitcoinCore\nAfter=network-online.target\n\n[Service]\nType=simple\n\nUser=web\nExecStart=/home/web/bitcoin-22.0/bin/bitcoind\nEnvironment=PYTHONPATH=/home/web/spacecrypto/app/app\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/bitcoincore.service
      
    - name: Lancement du Service BitcoinCore
      ansible.builtin.service:
        name: bitcoincore
        state: started
        enabled: yes
        
        
    - name: Création du Service BitcoinCore Scrap
      ansible.builtin.shell:
        cmd: echo "[Unit]\nDescription=Start BitcoinCore Scrap\nAfter=network-online.target\n\n[Service]\nType=simple\n\nUser=web\nExecStart=/usr/bin/python3 /home/web/spacecrypto/BitcoinCore.py\nEnvironment=PYTHONPATH=/home/web/spacecrypto/app/app\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/bitcoinscrap.service
      
    - name: Lancement du Service BitcoinCore Scrap
      ansible.builtin.service:
        name: bitcoinscrap
        state: started
        enabled: yes

    - name: Création du Flask Service
      ansible.builtin.shell:
        cmd: echo "[Unit]\nDescription=Start Flask server\nAfter=network-online.target\n\n[Service]\nType=simple\n\nExecStart=/usr/bin/python3 home/web/spacecrypto/app/run.py\nEnvironment=PYTHONPATH=/home/web/spacecrypto/app/app\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/flask.service
      
    - name: Lancement du Flask Service
      ansible.builtin.service:
        name: flask
        state: started
        enabled: yes

    - name: Création du Price service
      ansible.builtin.shell:
        cmd: echo "[Unit]\nDescription=Scrao Bitcoin Price\nAfter=network-online.target\n\n[Service]\nType=simple\n\nExecStart=/usr/bin/python3 /home/web/spacecrypto/Scrap.py\n\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/price.service

    - name: Lancement du price service
      ansible.builtin.service:
        name: price
        state: started
        enabled: yes

    - name: Création du docker service
      ansible.builtin.shell:
        cmd: echo "[Unit]\nDescription=Influx Docker\nAfter=network-online.target\n\n[Service]\nType=simple\n\nWorkingDirectory=/home/web/spacecrypto/influx-docker\nExecStart=sudo docker-compose start\n\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/influx-docker.service

    - name: Lancement du docker service 
      ansible.builtin.service:
        name: influx-docker
        state: started
        enabled: yes

    - name: Installation de Grafana
      ansible.builtin.shell:
        cmd: wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add - && echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list

    - name: Update et upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
 
    - name: Installation de packets
      apt: name={{ item }} update_cache=yes state=latest
      with_items:
        - grafana
   
    - name: Start grafana service
      ansible.builtin.service:
        name: grafana-server
        state: started
        enabled: yes

    - name: Change grafana password
      ansible.builtin.shell:
        cmd: sleep 5 && grafana-cli --homepath "/usr/share/grafana" admin reset-admin-password Tom03042003 && sed -i "s/;org_role = Viewer/enabled = true\norg_role = Viewer/g" /etc/grafana/grafana.ini

    - name: Connect DB and Import Dashboard
      ansible.builtin.shell:
        cmd: cd /home/web/spacecrypto/grafana && bash /home/web/spacecrypto/grafana/setup.sh
        
    - name: Add iptables rules
      ansible.builtin.shell:
        cmd: sudo iptables -A INPUT -p tcp --dport 9100 -s localhost -j ACCEPT && sudo iptables -A INPUT -p tcp -m tcp --dport 9100 -j REJECT && sudo iptables -A INPUT -p tcp --dport 9090 -s localhost -j ACCEPT && sudo iptables -A INPUT -p tcp -m tcp --dport 9090 -j REJECT

    - name: Fail2ban
      ansible.builtin.shell:
        cmd: cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
       
    - name: restart fail2ban service
      ansible.builtin.service:
       name: fail2ban
       state: restarted
       enabled: yes

    - name: restart grafana service
      ansible.builtin.service:
       name: grafana-server
       state: restarted
...
